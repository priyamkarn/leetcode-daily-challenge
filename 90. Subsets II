void solve(vector<int> temp, vector<vector<int>>& ans, vector<int>& nums, int i, int n) {
    if (i >= n) {
        ans.push_back(temp);
        return;
    }
    temp.push_back(nums[i]);
    solve(temp, ans, nums, i + 1, n);
    temp.pop_back();
    // Skip over duplicates
    while (i < n - 1 && nums[i] == nums[i + 1]) {
        i++;
    }
    solve(temp, ans, nums, i + 1, n);
}

    vector<vector<int>> subsetsWithDup(vector<int>& nums) {
     int n = nums.size();
    vector<int> temp;
    vector<vector<int>> ans;
    sort(nums.begin(), nums.end()); // Sort input vector
    solve(temp, ans, nums, 0, n);
    return ans;
    }
};
