class Solution {
public:
    int numberOfSubarrays(vector<int>& nums, int k) {
        for(int i=0;i<nums.size();i++)
        {
            if((nums[i]%2)==1)
            {
                nums[i]=1;
            }
            else
            {
                nums[i]=0;
            }
        }
        //count of subarray with sum k
        unordered_map<int,int>ump;
        int sum=0;
        int c=0;
        for(int i=0;i<nums.size();i++)
        {
            sum+=nums[i];
            //current prefix sum
            if(sum==k)
            {
                c++;
            }
            //if current prefix sum-k is present in map,to uskasum+k=current,basically left++ condition.
            if(ump.find(sum-k)!=ump.end())
            {
                c+=ump[sum-k];
            }
            ump[sum]++;
        }
        return c;
    }
};
