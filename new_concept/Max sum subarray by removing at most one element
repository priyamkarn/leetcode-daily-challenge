int maxSumSubarray(int arr[], int n)
    {
        //Your code here
        int curr_max=arr[0];
        int maxi=arr[0];
        int fw[n];
        fw[0]=arr[0];
        vector<int>v;
        v.push_back(arr[0]);
        for(int i=1;i<n;i++)
        {
            curr_max=max(arr[i],curr_max+arr[i]);
            maxi=max(maxi,curr_max);
            fw[i]=curr_max;
             v.push_back(arr[i]);
        }
        int bw[n];
        bw[n-1]=arr[n-1];
        curr_max=arr[n-1];
        maxi=arr[n-1];
        for(int i=n-2;i>=0;i--)
        {
            curr_max=max(arr[i],curr_max+arr[i]);
            maxi=max(maxi,curr_max);
            bw[i]=curr_max;
        }
        int final = maxi;
        //sum of subarray before and after so i to n-1
        for(int i=1;i<n-1;i++)
        {
            final=max(final,max(0,fw[i-1]+max(0,bw[i+1])));
        }
        if(final==0)
        {
            return *max_element(v.begin(),v.end());
        }
        return final;
    }
